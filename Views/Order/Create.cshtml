@{
    ViewData["Title"] = "Place Order";
    var product = ViewBag.Product as Product;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - TraadeSphere_vrund</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <div class="container py-4">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h2 class="mb-0">Place Order</h2>
                    </div>
                    <div class="card-body">
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                                {
                                    <div>@error.ErrorMessage</div>
                                }
                            </div>
                        }

                        @if (product != null)
                        {
                            <!-- Product Information -->
                            <div class="card mb-4">
                                <div class="card-body">
                                    <h5 class="card-title">Product Details</h5>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <p><strong>Name:</strong> @product.Name</p>
                                            <p><strong>Description:</strong> @(product.Description ?? "No description")</p>
                                            <p><strong>Category:</strong> @(product.Category ?? "Uncategorized")</p>
                                        </div>
                                        <div class="col-md-6">
                                            <p><strong>Price:</strong> $@product.Price / @product.Unit</p>
                                            <p><strong>Available:</strong> @product.Quantity @product.Unit</p>
                                            <p><strong>Status:</strong> 
                                                <span class="badge @(product.Status == "Active" ? "bg-success" : "bg-secondary")">
                                                    @product.Status
                                                </span>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Order Form -->
                            <form method="post" asp-action="Create" asp-route-productId="@product.ProductId">
                                @Html.AntiForgeryToken()
                                
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="quantity" class="form-label">Quantity</label>
                                            <input type="number" 
                                                   name="quantity" 
                                                   id="quantity"
                                                   class="form-control" 
                                                   min="1" 
                                                   max="@product.Quantity" 
                                                   value="1" 
                                                   required />
                                            <div class="form-text">Max available: @product.Quantity @product.Unit</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="totalPrice" class="form-label">Estimated Total</label>
                                            <input type="text" 
                                                   id="totalPrice" 
                                                   class="form-control" 
                                                   value="$@product.Price" 
                                                   readonly />
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="shippingAddress" class="form-label">Shipping Address</label>
                                    <textarea name="shippingAddress" 
                                              id="shippingAddress"
                                              class="form-control" 
                                              rows="3" 
                                              placeholder="Enter your complete shipping address..." 
                                              required></textarea>
                                </div>

                                <div class="mb-3">
                                    <label for="paymentMethod" class="form-label">Payment Method</label>
                                    <select name="paymentMethod" id="paymentMethod" class="form-select" required>
                                        <option value="">Select Payment Method</option>
                                        <option value="Credit Card">Credit Card</option>
                                        <option value="Debit Card">Debit Card</option>
                                        <option value="PayPal">PayPal</option>
                                        <option value="Bank Transfer">Bank Transfer</option>
                                        <option value="Cash on Delivery">Cash on Delivery</option>
                                    </select>
                                </div>

                                <div class="d-flex justify-content-between">
                                    <a href="@Url.Action("Index", "Product")" class="btn btn-secondary">Cancel</a>
                                    @if (product.Quantity > 0 && product.Status == "Active")
                                    {
                                        <button type="submit" class="btn btn-success">Place Order</button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-secondary" disabled>Not available for ordering</button>
                                    }
                                </div>
                            </form>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <h4>Product Not Found</h4>
                                <p>The product you're trying to order is not available.</p>
                                <a href="@Url.Action("Index", "Product")" class="btn btn-primary">Back to Products</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    
    <!-- Calculate total price dynamically -->
    <script>
        $(document).ready(function() {
            // Serialize to a JS-safe literal and default to 0 if product is null
            const unitPrice = @System.Text.Json.JsonSerializer.Serialize(product?.Price ?? 0M);
            
            $('#quantity').on('input', function() {
                const quantity = Number($(this).val()) || 1;
                const total = (unitPrice * quantity).toFixed(2);
                $('#totalPrice').val('$' + total);
            });
        });
    </script>
</body>
</html>
